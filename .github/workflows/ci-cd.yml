name: CI/CD Pipeline

on:
  push:
    branches:
      - 'feature/**'
      - 'main'
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build & Test Monorepo
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: innogram
          POSTGRES_USER: innogram_user
          POSTGRES_PASSWORD: innogram_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U innogram_user"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: innogram
          RABBITMQ_DEFAULT_PASS: innogram_password

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build monorepo
        run: npm run build

      - name: Run tests
        run: npm run test --if-present

  deploy:
    name: Deploy (CD)
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker Images
        uses: docker/build-push-action@v6
        with:
          push: true
